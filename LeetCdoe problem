============================================================
# 1517. Find Users With Valid E-Mails
Answer
select  *
from Users
where mail REGEXP  "^[a-zA-Z][a-zA-Z0-9_.-]*@leetcode[.]com$"
==============================================================
1050. Actors and Directors Who Cooperated At Least Three Times
Answer
SELECT actor_id , director_id FROM 
ActorDirector Group by actor_id,director_id 
having count(timestamp) >= 3
==============================================================
1757. Recyclable and Low Fat Products
#Answer
SELECT product_id FROM 
PRODUCTS 
WHERE product_id > 0 
GROUP BY product_id ,low_fats ,recyclable 
HAVING low_fats = "Y"
AND recyclable  = "Y"
================================================================
584. Find Customer Referee
#Answer
SELECT NAME FROM 
CUSTOMER 
WHERE referee_id != 2 OR referee_id IS NULL
================================================================
595. Big Countries
#Answer
select name,population,area
from world
where area >= 3000000 or population >=25000000;
===============================================================
1148. Article Views I
SELECT DISTINCT AUTHOR_ID AS id FROM Views 
WHERE AUTHOR_ID = VIEWER_ID ORDER BY AUTHOR_ID ASC
============================================================
1683. Invalid Tweets
Answer
SELECT tweet_id FROM Tweets
WHERE LENGTH(CONTENT) > 15
===========================================================
1378. Replace Employee ID With The Unique Identifier
select unique_id , name 
from Employees as emp 
left join EmployeeUNI  as emui
on emp.id = emui.id
============================================================
1068. Product Sales Analysis I
# Write your MySQL query statement below
SELECT product_name , year, price 
FROM Sales LEFT JOIN
Product
ON Sales.product_id = Product.product_id
===========================================================
1581. Customer Who Visited but Did Not Make Any Transactions
select v.customer_id , count(v.visit_id) as count_no_trans 
from Visits as v
left join Transactions as t
on v.visit_id = t.visit_id 
where t.transaction_id is null
group by v.customer_id 
===========================================================\
197. Rising Temperature
-- SELECT Id
-- FROM Weather 
-- WHERE temperature IN 
-- (
--     (SELECT MAX(temperature) FROM Weather), 
--     (SELECT MAX(temperature) 
--     FROM Weather
--     WHERE temperature < (
--         SELECT MAX(temperature) 
--         FROM Weather
--         )
--     ))


-- select w1.id
-- from Weather as w1 , Weather as w2
-- where Datediff( w1.recordDate , w2.recordDate ) and w1.temperature  > w2.temperature 

SELECT w1.id
FROM Weather w1
JOIN Weather w2
ON DATEDIFF(w1.recordDate, w2.recordDate) = 1
WHERE w1.temperature > w2.temperature;
=======================================================================

1661. Average Time of Process per Machine
select a.machine_id , round(avg(b.timestamp  - a.timestamp ),3) as processing_time 
from Activity as a 
join Activity as b
on a.machine_id  = b.machine_id  and a.activity_type = "start" and b.activity_type ="end"
group by 1
=======================================================================
577. Employee Bonus
select e.name as name ,b.bonus as bonus
from Employee as e
left join Bonus as b
on e.empId = b.empId 
where b.bonus < 1000 or b.bonus is null
=======================================================================


Query a list of CITY names from STATION for cities that have an even ID number. Print the results in any order, but exclude duplicates from the answer.
The STATION table is described as follows:


select distinct city 
from station 
where (id % 2) = 0
==============================================================
Revising the Select Query I

SELECT * 
FROM CITY 
WHERE CountryCode = "USA" AND Population > 100000
===============================================================
Revising the Select Query II
SELECT NAME FROM CITY LIMIT 1,4;
